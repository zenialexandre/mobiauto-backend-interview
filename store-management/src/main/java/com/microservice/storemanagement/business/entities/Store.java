package com.microservice.storemanagement.business.entities;

import com.microservice.opportunitymanagement.business.entities.Opportunity;
import com.microservice.opportunitymanagement.utils.constants.OpportunityManagementConstants;
import com.microservice.storemanagement.utils.constants.StoreManagementConstants;
import com.microservice.systemadministration.business.entities.User;
import com.microservice.systemadministration.utils.constants.SystemAdministrationConstants;
import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.persistence.Entity;
import jakarta.persistence.Table;
import jakarta.persistence.Id;
import jakarta.persistence.Column;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.FetchType;
import jakarta.persistence.OneToMany;
import lombok.NoArgsConstructor;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.Getter;
import lombok.Setter;

import java.util.Set;

@Getter
@Setter
@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
@Entity
@Table(name = "store")
public class Store {

    @Id
    @Column(name = StoreManagementConstants.STORE_SEQUENCE_ID)
    @Schema(description = "Automatically generated by the system.")
    @SequenceGenerator(
            name = StoreManagementConstants.STORE_SEQUENCE_ID,
            sequenceName = StoreManagementConstants.STORE_SEQUENCE_ID
    )
    @GeneratedValue(
            strategy = GenerationType.SEQUENCE,
            generator = StoreManagementConstants.STORE_SEQUENCE_ID
    )
    private Integer storeSequenceId;

    @Column(name = "store_name")
    private String storeName;

    @OneToMany(
            fetch = FetchType.EAGER,
            mappedBy = "storeSequenceId"
    )
    private Set<User> storeUsers;

    @OneToMany(
            fetch = FetchType.EAGER,
            mappedBy = "storeSequenceId"
    )
    private Set<Opportunity> storeOpportunities;

}
